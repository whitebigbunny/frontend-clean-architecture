import { User } from "../domain/user";
import { Cart } from "../domain/cart";
import { createOrder } from "../domain/order";

// –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ, —á—Ç–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã –ø–æ—Ä—Ç–æ–≤ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ _–ø—Ä–∏–∫–ª–∞–¥–Ω–æ–º —Å–ª–æ–µ_,
// –∞ –≤–æ—Ç –∏—Ö —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è ‚Äî –≤ —Å–ª–æ–µ _–∞–¥–∞–ø—Ç–µ—Ä–æ–≤_.
import { usePayment } from "../services/paymentAdapter";
import { useNotifier } from "../services/notificationAdapter";
import { useCartStorage, useOrdersStorage } from "../services/storageAdapter";

export function useOrderProducts() {
  // –û–±—ã—á–Ω–æ –ø–æ–ª—É—á–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç —á–µ—Ä–µ–∑ Dependency Injection.
  // –¢—É—Ç –º—ã –º–æ–∂–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ö—É–∫–∏ –∫–∞–∫ –∫—É—Å—Ç–∞—Ä–Ω—ã–π ‚ÄùDI-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä‚Äú.
  const notifier = useNotifier();
  const payment = usePayment();
  const orderStorage = useOrdersStorage();
  const cartStorage = useCartStorage();

  // –ú–æ–∂–µ–º —Ç–∞–∫–∂–µ –ø–æ–ª—É—á–∏—Ç—å `user` –∏ `cart` –ø—Ä—è–º–æ —Ç—É—Ç —á–µ—Ä–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ö—É–∫–∏
  // –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –∏—Ö –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫ —Ñ—É–Ω–∫—Ü–∏–∏.

  // –í –∏–¥–µ–∞–ª–µ –º—ã –±—ã –ø–µ—Ä–µ–¥–∞–ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–º –∫–æ–º–∞–Ω–¥—É,
  // –∫–æ—Ç–æ—Ä–∞—è –±—ã –∏–Ω–∫–∞–ø—Å—É–ª–∏—Ä–æ–≤–∞–ª–∞ –≤—Å–µ –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ.
  async function orderProducts(user: User, cart: Cart) {
    // –ó–¥–µ—Å—å –º—ã –º–æ–∂–µ–º –ø—Ä–æ–≤–∞–ª–∏–¥–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–µ—Ä–µ–¥ —Å–æ–∑–¥–∞–Ω–∏–µ–º –∑–∞–∫–∞–∑–∞.

    const order = createOrder(user, cart);

    // –§—É–Ω–∫—Ü–∏—è —é–∑-–∫–µ–π—Å–∞ –Ω–µ –≤—ã–∑—ã–≤–∞–µ—Ç —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ —Å–µ—Ä–≤–∏—Å—ã –Ω–∞–ø—Ä—è–º—É—é,
    // –≤–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –æ–Ω–∞ –ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –Ω–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –æ–±—ä—è–≤–ª–µ–Ω—ã —Ä–∞–Ω–µ–µ.
    const paid = await payment.tryPay(order.total);
    if (!paid) return notifier.notify("–û–ø–ª–∞—Ç–∞ –Ω–µ –ø—Ä–æ—à–ª–∞ ü§∑");

    // –ê —Ç—É—Ç –º–æ–∂–µ–º —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ.

    const { orders } = orderStorage;
    orderStorage.updateOrders([...orders, order]);
    cartStorage.emptyCart();
  }

  return { orderProducts };
}
